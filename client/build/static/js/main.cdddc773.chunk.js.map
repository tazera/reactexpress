{"version":3,"sources":["Utils/Common.js","Component/Footer.js","Login/Login.js","Dashboard/Dashboard.js","Utils/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["getToken","sessionStorage","getItem","removeUserSession","removeItem","setUserSession","token","user","setItem","JSON","stringify","Footer","id","className","Login","props","useFormInput","initialValue","useState","value","setValue","onChange","e","target","loading","setLoading","username","password","error","setError","class","type","autoComplete","style","marginTop","color","onClick","axios","post","then","response","data","history","push","catch","status","message","disabled","Dashboard","handleLogout","state","locations","userStr","parse","getUser","get","console","log","this","setState","name","map","location","index","React","Component","PrivateRoute","component","rest","render","to","pathname","from","App","authLoading","setAuthLoading","useEffect","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"gSAQaA,EAAW,WACtB,OAAOC,eAAeC,QAAQ,UAAY,MAI/BC,EAAoB,WAC/BF,eAAeG,WAAW,SAC1BH,eAAeG,WAAW,SAIfC,EAAiB,SAACC,EAAOC,GACpCN,eAAeO,QAAQ,QAASF,GAChCL,eAAeO,QAAQ,OAAQC,KAAKC,UAAUH,K,qBCPjCI,MAZf,WACE,OAEA,wBAAQC,GAAG,MAAX,SACE,qBAAKC,UAAU,YAAf,SACE,sBAAMA,UAAU,wBAAhB,oCCqFSC,MApFf,SAAeC,GACX,IAAMC,EAAe,SAACC,GAAkB,IAAD,EACbC,mBAASD,GADI,mBAChCE,EADgC,KACzBC,EADyB,KAMvC,MAAO,CACLD,QACAE,SALmB,SAACC,GACpBF,EAASE,EAAEC,OAAOJ,UALF,EAaUD,oBAAS,GAbnB,mBAabM,EAba,KAaJC,EAbI,KAcdC,EAAWV,EAAa,IACxBW,EAAWX,EAAa,IAfV,EAgBME,mBAAS,MAhBf,mBAgBbU,EAhBa,KAgBNC,EAhBM,KA0CpB,OACE,gCACE,8BACE,qBAAIhB,UAAU,eAAd,iBACM,sBAAMiB,MAAM,WAAZ,oBADN,2BAIF,sBAAKjB,UAAU,gBAAf,UACE,oBAAIA,UAAU,cACd,2CACA,2CAEE,uBACA,+CAAOkB,KAAK,QAAWL,GAAvB,IAAiCM,aAAa,qBAEhD,sBAAKC,MAAO,CAAEC,UAAW,IAAzB,qBAEE,uBACA,+CAAOH,KAAK,YAAeJ,GAA3B,IAAqCK,aAAa,qBAEnDJ,GACC,qCACE,uBAAOK,MAAO,CAAEE,MAAO,OAAvB,SAAiCP,IACjC,0BAGJ,uBACA,uBACEG,KAAK,SACLlB,UAAU,SACVM,MAAOK,EAAU,aAAe,QAChCY,QApDY,WAClBP,EAAS,MACTJ,GAAW,GACXY,IACGC,KADH,UANiB,wBAMjB,iBACsC,CAClCZ,SAAUA,EAASP,MACnBQ,SAAUA,EAASR,QAEpBoB,MAAK,SAACC,GACLf,GAAW,GACXpB,EAAemC,EAASC,KAAKnC,MAAOkC,EAASC,KAAKlC,MAClDQ,EAAM2B,QAAQC,KAAK,iBAEpBC,OAAM,SAAChB,GACNH,GAAW,GACmB,MAA1BG,EAAMY,SAASK,OACjBhB,EAASD,EAAMY,SAASC,KAAKK,SAC1BjB,EAAS,qDAoCZkB,SAAUvB,IAEZ,uBAEA,cAAC,EAAD,W,wCCfOwB,G,wDA3Db,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAuBPkC,aAAe,WACd9C,IACA,EAAKY,MAAM2B,QAAQC,KAAK,MAxBxB,EAAKO,MAAQ,CACX3C,KAAM,GACN4C,UAAW,IAJI,E,qDAQnB,WACC,IAAI5C,EHpBgB,WACrB,IAAM6C,EAAUnD,eAAeC,QAAQ,QACvC,OAAIkD,EAAgB3C,KAAK4C,MAAMD,GACnB,KGiBAE,GACPH,EAAY,GAChBd,IAAMkB,IAAN,UAfgB,wBAehB,eAAqChB,MAAK,SAACC,GAC1CW,EAAS,YAAOX,EAASC,SAEzBG,OAAM,SAAChB,GACJ4B,QAAQC,IAAI7B,MAIf8B,KAAKC,SAAS,CACbpD,OAAM4C,gB,oBAUX,WAAU,IAAD,SAEkBO,KAAKR,MAAxB3C,EAFC,EAEDA,KAAM4C,EAFL,EAEKA,UACZ,OAEE,gCACE,8BACE,qBAAItC,UAAU,eAAd,iBACM,sBAAMA,UAAU,WAAhB,oBADN,2BAIF,sBAAKA,UAAU,gBAAf,UACA,oBAAIA,UAAU,cACZ,0CAAaN,EAAKqD,KAAlB,OACA,qBAAK/C,UAAU,QAAf,SACA,6BACGsC,EAAUU,KAAI,SAACC,EAAUC,GAAX,OACf,6BAAgB,4BAAID,EAASF,QAApBG,UAGX,uBAAOhC,KAAK,SAASlB,UAAU,SAASuB,QAAS,kBAAM,EAAKa,gBAAgB9B,MAAM,WAElF,cAAC,EAAD,c,GAtDgB6C,IAAMC,Y,QCIfC,MATf,YAA0D,IAAvBD,EAAsB,EAAjCE,UAAyBC,EAAQ,6BACvD,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACtD,GAAD,OAAWf,IAAa,cAACiE,EAAD,eAAelD,IAAY,cAAC,IAAD,CAAUuD,GAAI,CAAEC,SAAU,SAAUrB,MAAO,CAAEsB,KAAMzD,EAAM+C,kBC6D3GW,MArDf,WAAgB,IAAD,EACyBvD,oBAAS,GADlC,mBACNwD,EADM,KACOC,EADP,KAkBb,OAfAC,qBAAU,WACR,IAAMtE,EAAQN,IACTM,GAIL+B,IAAMkB,IAAN,UAXe,wBAWf,8BAA6CjD,IAASiC,MAAK,SAAAC,GACzDnC,EAAemC,EAASC,KAAKnC,MAAOkC,EAASC,KAAKlC,MAClDoE,GAAe,MACd/B,OAAM,SAAAhB,GACPzB,IACAwE,GAAe,QAEhB,IAECD,GAAe1E,IACV,qBAAKa,UAAU,UAAf,wCAIP,qBAAKA,UAAU,MAAf,SAeC,cAAC,IAAD,UACM,qBAAKA,UAAU,UAAf,SACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgE,KAAK,IAAIC,OAAK,EAACX,UAAWrD,IACjC,cAAC,EAAD,CAAc+D,KAAK,aAAaV,UAAWnB,cC/C1C+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASlB,OACP,cAAC,IAAMmB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.cdddc773.chunk.js","sourcesContent":["// return the user data from the session storage\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);\n  else return null;\n}\n\n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n\n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('user');\n}\n\n// set the token and user from the session storage\nexport const setUserSession = (token, user) => {\n  sessionStorage.setItem('token', token);\n  sessionStorage.setItem('user', JSON.stringify(user));\n}","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n\r\n  <footer id=\"foo\">\r\n    <div className=\"container\">\r\n      <span className=\"footerText text-muted\">About HelpCenter.</span>\r\n    </div>\r\n  </footer>\r\n   \r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { setUserSession } from \"../Utils/Common\";\r\nimport \"./Login.css\";\r\nimport \"../Component/Footer.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Footer from \"../Component/Footer\";\r\n\r\nfunction Login(props) {\r\n    const useFormInput = (initialValue) => {\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const handleChange = (e) => {\r\n      setValue(e.target.value);\r\n    };\r\n    return {\r\n      value,\r\n      onChange: handleChange,\r\n    };\r\n  };\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const username = useFormInput(\"\");\r\n  const password = useFormInput(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const backEndUrl = \"http://localhost:5000\";\r\n\r\n  // handle button click of login form\r\n  const handleLogin = () => {\r\n    setError(null);\r\n    setLoading(true);\r\n    axios\r\n      .post(`${backEndUrl}/users/signin`, {\r\n        username: username.value,\r\n        password: password.value,\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setUserSession(response.data.token, response.data.user);\r\n        props.history.push(\"/dashboard\");\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.status === 401)\r\n          setError(error.response.data.message);\r\n        else setError(\"Something went wrong. Please try again later.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2 className=\"TitleHeading\" >\r\n          EVS.<span class=\"colorTwo\">Energy</span>|Charging Dashboard\r\n        </h2>\r\n      </div>\r\n      <div className=\"login-wrapper\">\r\n        <hr className=\"breakline\"></hr>\r\n        <h2> Sign in </h2>\r\n        <div>\r\n          Username\r\n          <br />\r\n          <input type=\"text\" {...username} autoComplete=\"new-password\" />\r\n        </div>\r\n        <div style={{ marginTop: 10 }}>\r\n          Password\r\n          <br />\r\n          <input type=\"password\" {...password} autoComplete=\"new-password\" />\r\n        </div>\r\n        {error && (\r\n          <>\r\n            <small style={{ color: \"red\" }}>{error}</small>\r\n            <br />\r\n          </>\r\n        )}\r\n        <br />\r\n        <input\r\n          type=\"button\"\r\n          className=\"button\"\r\n          value={loading ? \"Loading...\" : \"Login\"}\r\n          onClick={handleLogin}\r\n          disabled={loading}\r\n        />\r\n        <br />\r\n\r\n        <Footer></Footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n/*import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Login.css';\r\n\r\nconst backEndUrl = 'http://localhost:5000'; \r\n\r\nasync function loginUser(credentials) {\r\n  return fetch(`${backEndUrl}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n }\r\n\r\n\r\nexport default function Login({ setToken }) {\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const token = await loginUser({\r\n      username,\r\n      password\r\n    });\r\n    setToken(token);\r\n  }\r\n\r\n  return(\r\n    <div className=\"login-wrapper\">\r\n      <h1>Please Log In</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <p>Username</p>\r\n          <input type=\"text\" onChange={e => setUserName(e.target.value)}/>\r\n        </label>\r\n        <label>\r\n          <p>Password</p>\r\n          <input type=\"password\" onChange={e => setPassword(e.target.value)}/>\r\n        </label>\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n};*/\r\n","import React from \"react\";\r\nimport { getUser, removeUserSession } from \"../Utils/Common\";\r\nimport \"./Dashboard.css\";\r\nimport \"../Component/Footer.css\";\r\nimport Footer from \"../Component/Footer\";\r\nimport axios from \"axios\";\r\nimport { render } from \"react-dom\";\r\n\r\nconst backEndUrl = \"http://localhost:5000\";\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {},\r\n      locations: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n   let user = getUser();\r\n   let locations = [];\r\n   axios.get(`${backEndUrl}/locations`).then((response) => {\r\n    locations = [...response.data];\r\n   })\r\n   .catch((error) => {\r\n       console.log(error)\r\n   });\r\n \r\n   \r\n    this.setState({\r\n     user, locations });\r\n  }\r\n\r\n  // handle click event of logout button\r\n   handleLogout = () => {\r\n    removeUserSession();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  \r\nrender() {\r\n\r\n const {user, locations} = this.state;\r\n  return (\r\n\r\n    <div>\r\n      <div>\r\n        <h2 className=\"TitleHeading\">\r\n          EVS.<span className=\"colorTwo\">Energy</span>|Charging Dashboard\r\n        </h2>\r\n      </div>\r\n      <div className=\"login-wrapper\">\r\n      <hr className=\"breakline\"></hr>\r\n        <h2>Welcome {user.name}!</h2>\r\n        <div className=\"Table\">\r\n        <ul>\r\n          {locations.map((location, index) =>\r\n          <li key={index}><p>{location.name}</p></li>)}    \r\n        </ul>\r\n        </div>\r\n        <input type=\"button\" className=\"button\" onClick={() => this.handleLogout()} value=\"Logout\" />\r\n    \r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n// import React from 'react';\r\n\r\n// export default function Dashboard() {\r\n//   return(\r\n//     <h2>Dashboard</h2>\r\n//   );\r\n// }\r\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from './Common';\n\n// handle the private routes\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}\n\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport Login from './Login/Login';\nimport Dashboard from './Dashboard/Dashboard';\n//import Footer from './Component/Footer';\n\nimport PrivateRoute from './Utils/PrivateRoute';\n//import PublicRoute from './Utils/PublicRoute';\nimport { getToken, removeUserSession, setUserSession } from './Utils/Common';\n\n\nconst backEndUrl = 'http://localhost:5000'; \n\nfunction App() {\n  const [authLoading, setAuthLoading] = useState(true);\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      return;\n    }\n\n    axios.get(`${backEndUrl}/verifyToken?token=${token}`).then(response => {\n      setUserSession(response.data.token, response.data.user);\n      setAuthLoading(false);\n    }).catch(error => {\n      removeUserSession();\n      setAuthLoading(false);\n    });\n  }, []);\n\n  if (authLoading && getToken()) {\n    return <div className=\"content\">Checking Authentication...</div>\n  }\n\n  return (\n    <div className=\"App\">\n      {/* <BrowserRouter>\n        <Switch>\n        <Route path=\"/\">\n            <Login />\n          </Route>\n\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n         \n        </Switch>\n      </BrowserRouter> */}\n\n\n     <BrowserRouter>\n           <div className=\"content\">\n            <Switch>\n              <Route path=\"/\" exact component={Login} />\n              <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n      </BrowserRouter>  \n     {/* <Footer/> */}\n     </div>\n\n  );\n \n}\n\nexport default App;\n\n\n\n{/* <div className=\"header\">\n<NavLink activeClassName=\"active\" to=\"/login\">Login</NavLink><small>(Access without token only)</small>\n<NavLink activeClassName=\"active\" to=\"/dashboard\">Dashboard</NavLink><small>(Access with token only)</small>\n</div>  */}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*import React, { useState } from 'react';\nimport './App.css';\nimport Users from './Component/Users/Users';\nimport Login from './Login/Login';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './Dashboard/dashboard';\nimport Preferences from './Preferences/Preferences';\n\nfunction setToken(userToken) {\n  sessionStorage.setItem('token', JSON.stringify(userToken));\n}\n\nfunction getToken() {\n  const tokenString = sessionStorage.getItem('token');\n  const userToken = JSON.parse(tokenString);\n  return userToken?.token\n}\n\nfunction App() {  \n  const token = getToken();\n\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Application</h1>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/preferences\">\n            <Preferences />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}